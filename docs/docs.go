// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Miguel Morales",
            "email": "miguel@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Obtiene información general sobre la API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Información de la API",
                "responses": {
                    "200": {
                        "description": "Información de la API",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/compress": {
            "post": {
                "description": "Comprime una imagen individual con la calidad y formato especificados",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Compression"
                ],
                "summary": "Comprimir una imagen",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Archivo de imagen a comprimir",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 80,
                        "description": "Calidad de compresión (1-100)",
                        "name": "quality",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "jpeg",
                            "png",
                            "webp"
                        ],
                        "type": "string",
                        "default": "jpeg",
                        "description": "Formato de salida (jpeg, png, webp)",
                        "name": "format",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagen comprimida",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/compress/batch": {
            "post": {
                "description": "Comprime múltiples imágenes y las devuelve en un archivo ZIP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "Compression"
                ],
                "summary": "Comprimir múltiples imágenes",
                "parameters": [
                    {
                        "description": "Datos de compresión en lote",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.BatchCompressionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Archivo ZIP con imágenes comprimidas",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/compress/info": {
            "post": {
                "description": "Obtiene información detallada de una imagen",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Compression"
                ],
                "summary": "Obtener información de imagen",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Archivo de imagen a analizar",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Información de la imagen",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Verifica el estado de la API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Estado de la API",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.BatchCompressionRequest": {
            "type": "object",
            "required": [
                "images"
            ],
            "properties": {
                "format": {
                    "$ref": "#/definitions/domain.ImageFormat"
                },
                "images": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/domain.ImageData"
                    }
                },
                "quality": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                }
            }
        },
        "domain.ImageData": {
            "type": "object",
            "required": [
                "data",
                "filename"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "filename": {
                    "type": "string"
                }
            }
        },
        "domain.ImageFormat": {
            "type": "string",
            "enum": [
                "jpeg",
                "png",
                "webp"
            ],
            "x-enum-varnames": [
                "JPEG",
                "PNG",
                "WEBP"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Image Compress API",
	Description:      "API REST para comprimir imágenes individuales y en lote, desarrollada en Go siguiendo los principios SOLID.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
